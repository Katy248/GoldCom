<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="MainColor" Color="#535757"/>
    <SolidColorBrush x:Key="MainDarkColor" Color="#3F4141" />
    <SolidColorBrush x:Key="MainAccentColor" Color="#1B3638"/>
    <SolidColorBrush x:Key="MainAccentColorAlternate" Color="#FF234548"/>
    <SolidColorBrush x:Key="AddColor" Color="#8F8B88"/>
    <SolidColorBrush x:Key="AddDarkColor" Color="#6B6967" />
    <SolidColorBrush x:Key="AddAccentColor" Color="#5D432C" />
    
    <!--Base control-->
    <Style TargetType="Control" x:Key="ControlStyle">
        <Setter Property="FontFamily" Value="Montserrat, Arial, Comic Sans MS"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <!--Label1-->
    <Style TargetType="Label" x:Key="Label1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Margin" Value="0, 10, 0, 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <!--Label1 right-->
    <Style TargetType="Label" x:Key="Label1Right" BasedOn="{StaticResource Label1}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    
    <!--Title Label-->
    <Style TargetType="Label" x:Key="TitleLabel" BasedOn="{StaticResource Label1}">
        <Setter Property="FontSize" Value="27"/>

        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,25,0,0"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--Input1-->
    <Style TargetType="TextBox" x:Key="Input1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="10"
                        Padding="2"
                        BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="InputMax" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>
    
    <!--Password1-->
    <Style TargetType="PasswordBox" x:Key="Password1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="10"
                        Padding="2"
                        BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Button1-->
    <Style TargetType="Button" x:Key="Button1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MaxHeight" Value="60"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource MainAccentColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <ContentPresenter
                            Margin="10"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="{StaticResource MainAccentColorAlternate}"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="{StaticResource MainColor}"/>
                    <Setter Property="Foreground" Value="LightGray"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="{StaticResource MainDarkColor}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="NavButton" BasedOn="{StaticResource Button1}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource MainDarkColor}"/>
        <Setter Property="Foreground" Value="White"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="{StaticResource AddDarkColor}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TabControl" x:Key="Tabs1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
    </Style>
    
    <Style TargetType="TabItem" x:Key="Tab1" BasedOn="{StaticResource ControlStyle}">

    </Style>
    
    <!--TextBox1-->
    <Style TargetType="TextBlock" x:Key="TextBlock1">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="DataGrid" x:Key="DataGrid1" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="AutomationProperties.IsRowHeader" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>

    </Style>
    
    <Style TargetType="StackPanel" x:Key="StackPanel1">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    
    <Style TargetType="ComboBox" x:Key="ComboBox1" BasedOn="{StaticResource ControlStyle}">

    </Style>
    
    <Style TargetType="ComboBox" x:Key="ComboBoxMax" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="BorderBase">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="BlockBorder1" BasedOn="{StaticResource BorderBase}">
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="BlockBorder2" BasedOn="{StaticResource BorderBase}">
        <Setter Property="Background" Value="{StaticResource AddColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="ViewBorder" BasedOn="{StaticResource BorderBase}">
        <Setter Property="Background" Value="{StaticResource MainDarkColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="ViewBorder2" BasedOn="{StaticResource BorderBase}">
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>